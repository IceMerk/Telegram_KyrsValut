import json
import requests
from config import valuta


class APIException(Exception):
    pass


class Converted:
    @staticmethod
    def chek_valuta(kurs: str) -> str or False:  # –°–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –≤–∞–ª—é—Ç –∏ –ø—Ä–∏—Å–≤–∞–µ–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        for key, val in valuta.items():
            for x in val:
                if kurs[:3] in x:  # –°–≤–µ—Ä—è–µ–º –ø–æ –ø–µ—Ä–≤—ã–º 3 —Å–∏–º–≤–æ–ª–∞–º, –ø–æ—ç—Ç–æ–º—É –æ—à–∏–±–∫–∏ –¥–æ–ø—É—Å—Ç–∏–º—ã
                    return key
        raise KeyError

    @staticmethod
    def get_price(base: str, quote: str, amount: str) -> str:
        if base == quote:
            raise APIException('‚ùó –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –æ–¥–Ω—É –∏ —Ç—É–∂–µ –≤–∞–ª—é—Ç—É ‚ùó')

        try:
            base_val = Converted.chek_valuta(base)
        except KeyError:
            raise APIException(f'–ü—Ä–∞–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –≤–∞–ª—é—Ç—ã üëâ {base}')
        try:
            quote_val = Converted.chek_valuta(quote)
        except KeyError:
            raise APIException(f'–ü—Ä–∞–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –≤–∞–ª—é—Ç—ã üëâ {quote}')

        try:
            amount_float = float(amount.replace(',', '.'))
        except ValueError:
            raise APIException(f'–ü—Ä–æ–≤–µ—Ä—å —Ü–∏—Ñ—Ä—É üëâ {amount}')

        url = f"https://api.apilayer.com/currency_data/convert?to={quote_val}&from={base_val}&amount={amount_float}"
        payload = {}
        headers = {"apikey": "Pp4d5VYlmZo0YAtpUhoc1uc3WD4DG1re"}

        response = requests.get(url, headers=headers, data=payload)
        result = json.loads(response.text)

        return f'{amount} {base} = {result["result"]} {quote}'
