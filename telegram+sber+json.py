import config  # –¢—É—Ç –ª–µ–∂–∏—Ç —Ç–æ–∫–µ–Ω –æ—Ç –¢–µ–ª–µ–≥—Ä–∞–º–∞
import telebot
import requests
import json
from datetime import datetime

''' –î–∞–Ω–Ω—ã–π –±–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, 
–≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è ScillFactory

-----–§—É–Ω–∫—Ü–∏–∏----
def get_kurs() -> True:  –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –≤–∞–ª—é—Ç
def chek_time_kurs() -> True:  –§—É–Ω—Ü–∏—è —Å–≤–µ—Ä–∫–∏ –¥–Ω—è, –µ—Å–ª–∏ –Ω–∞–¥–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π json —á–µ—Ä–µ–∑ get_kurs
def chek_valuta(valuta: str) -> str or False:  –°–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –≤–∞–ª—é—Ç –∏ –ø—Ä–∏—Å–≤–∞–µ–≤–∞–µ–º –∫–∞–∫ –≤ json
def chek_len(dlina) -> bool:  –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–µ–¥–µ–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –¥–ª–∏–Ω—É
def chek_user(cifra: str) -> bool:  –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ü–∏—Ñ—Ä—É
def text_for_user(vy: str, vs: str, coin: str) -> str:  –ü–µ—á–∞—Ç–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

@bot.message_handler(commands=['start', 'help'])  –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –æ–Ω–æ –∂–µ –ø–æ–º–æ—â—å
@bot.message_handler(commands=['values'])  –°–º–æ—Ç—Ä–∏–º —á—Ç–æ –º–æ–∂–µ–º —Å—á–∏—Ç–∞—Ç—å –≤ –≤–∞–ª—é—Ç–∞—Ö
@bot.message_handler(content_types=['text']) –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –≤–≤–µ–¥–µ–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –≤–∞–ª—é—Ç
'''


url = 'https://www.cbr-xml-daily.ru/daily_json.js'
bot = telebot.TeleBot(config.TOKEN)
with open('kurs.json') as f:  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
    file_json = json.load(f)  # –ö–ª–∞–¥–µ–º –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é


def get_kurs() -> True:  # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –≤–∞–ª—é—Ç
    url = 'https://www.cbr-xml-daily.ru/daily_json.js'
    try:
        r = requests.get(url).text
        with open('kurs.json', 'w') as file:  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å
            file.write(r)
        return True
    except Exception:  # –ï—Å–ª–∏ –°–µ—Ä–≤–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω
        print('–°–µ—Ä–≤–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω')


def chek_time_kurs() -> True:  # –§—É–Ω—Ü–∏—è —Å–≤–µ—Ä–∫–∏ –¥–Ω—è, –µ—Å–ª–∏ –Ω–∞–¥–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π json —á–µ—Ä–µ–∑ get_kurs
    time_now = str(datetime.now()).split(' ')[0]
    time_json = file_json['Date'].split('T')[0]
    if time_now != time_json:  # –°–≤–µ—Ä—è–µ–º –¥–Ω–∏: –ª–æ–∫–∞–ª—å–Ω—ã–π –∏ –≤ —Ñ–∞–π–ª–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç (–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ —á–∞—Å–∞–º)
        get_kurs()  # –µ—Å–ª–∏ –¥–∞—Ç—ã –Ω–µ —Å–æ–≤–ø–∞–ª–∏, —Ç–æ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
    return True


def chek_valuta(valuta: str) -> str or False:  # –°–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –≤–∞–ª—é—Ç –∏ –ø—Ä–∏—Å–≤–∞–µ–≤–∞–µ–º –∫–∞–∫ –≤ json
    usd = ['–¥–æ–ª–ª–∞—Ä', 'usd', '–∑–µ–ª–µ–Ω—ã–π', '–±–∞–∫—Å', '–¥–æ–ª–∞—Ä']
    ru = ['—Ä—É–±–ª—å', 'ru', '–¥–µ—Ä–µ–≤—è–Ω–Ω—ã–π', '—Ä—É–ø—å', '—Ü–µ–ª–∫–æ–≤—ã–π']
    cny = ['—é–∞–Ω—å', 'cny', '–∫–∏—Ç–∞–π—Å–∫–∏—Ö']
    eur = ['–µ–≤—Ä–æ']
    if any([valuta[:3] in x for x in usd]): return 'USD'
    elif any([valuta[:3] in x for x in ru]): return 'RU'
    elif any([valuta[:3] in x for x in cny]): return 'CNY'
    elif any([valuta[:3] in x for x in eur]): return 'EUR'
    return False


def chek_len(dlina) -> bool:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–µ–¥–µ–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –¥–ª–∏–Ω—É
    if dlina != 3:
        return False
    else:
        return True


def chek_user(cifra: str) -> bool:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ü–∏—Ñ—Ä—É
    cifra = cifra.replace(',', '')  # –ï—Å–ª–∏ –µ—Å—Ç—å –≤ —Ç–µ–∫—Å—Ç–µ —Ç–æ—á–∫–∞ –∏–ª–∏ –∑–∞–ø—è—Ç–∞—è - —É–±–∏—Ä–∞–µ–º
    cifra = cifra.replace('.', '')
    if not cifra.isnumeric():  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ü–∏—Ñ—Ä—ã –≤ —Å—Ç—Ä–æ–∫–µ
        return False
    else:
        return True


def text_for_user(vy: str, vs: str, coin: str) -> str:  # –ü–µ—á–∞—Ç–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    coin = float(coin.replace(',', '.'))  # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ü–∏—Ñ—Ä—É, —á—Ç–æ–±—ã —É–º–Ω–æ–∂–∏—Ç—å
    vy_ch, vs_ch = chek_valuta(vy.lower()), chek_valuta(vs.lower())  # –°–≤–µ—Ä—è–µ–º –≤ –≤–∞–ª—é—Ç–∞—Ö –∏ –ø—Ä–∏—Å–≤–∞–µ–≤–∞–µ–º –Ω—É–∂–Ω—ã–π –∑–Ω–∞–∫
    if vy_ch and vs_ch:  # –ï—Å–ª–∏ –Ω–µ False
        if vs_ch == 'RU':  # –í jsone –Ω–µ—Ç —Ä—É–±–ª–µ–π, –ø–æ—ç—Ç–æ–º—É –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–≤—É—é –≤–∞–ª—é—Ç—É
            vy_j = file_json['Valute'][vy_ch]['Value']
            return f'{vy} –≤ –ø–µ—Ä–µ–≤–æ–¥–µ –Ω–∞ {vs} —Ä–∞–≤–µ–Ω {round(vy_j * coin, 2)}'
        elif vy_ch == 'RU':  # –Ω–∞ –≤—Ç–æ—Ä—É—é –≤–∞–ª—é—Ç—É
            vs_j = file_json['Valute'][vs_ch]['Value']
            return f'{vy} –≤ –ø–µ—Ä–µ–≤–æ–¥–µ –Ω–∞ {vs} —Ä–∞–≤–µ–Ω {round(vs_j * coin, 2)}'
        elif vy_ch != 'RU' and vs_ch != 'RU':  # –ò–Ω–∞—á–µ —Å—á–∏—Ç–∞–µ–º —Å –Ω—É–∂–Ω—ã–º–∏
            vy_j, vs_j = file_json['Valute'][vy_ch]['Value'], file_json['Valute'][vs_ch]['Value']
            if vy_j > vs_j:
                return f'{vy} –≤ –ø–µ—Ä–µ–≤–æ–¥–µ –Ω–∞ {vs} —Ä–∞–≤–µ–Ω {round((vy_j - vs_j) * coin, 2)}'
            return f'{vy} –≤ –ø–µ—Ä–µ–≤–æ–¥–µ –Ω–∞ {vs} —Ä–∞–≤–µ–Ω {round((vs_j - vy_j) * coin, 2)}'
    else:  # –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª—é—Ç –Ω–µ –ø—Ä–æ—à–ª–∏
        return f'–¢–∞–∫–æ–π –≤–∞–ª—é—Ç—ã –µ—â—ë –Ω–µ—Ç. üôÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ãüëâ /values'


@bot.message_handler(commands=['start', 'help'])  # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –æ–Ω–æ –∂–µ –ø–æ–º–æ—â—å
def start_help(message):
    text = '–¢—É—Ç –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –∫ –¥—Ä—É–≥–æ–π\n' \
           '<–í–∞–ª—é—Ç–∞ –≤ –∫–æ—Ç–æ—Ä–æ–π —É–∑–Ω–∞–µ–º> <–í–∞–ª—é—Ç–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è> <–¶–∏—Ñ—Ä–∞>\n' \
           '–ü—Ä–∏–º–µ—Ä: —é–∞–Ω—å —Ä—É–±–ª—å 100\n' \
           '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: /help\n' \
           '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: /values'
    bot.send_message(message.chat.id, text)


@bot.message_handler(commands=['values'])  # –°–º–æ—Ç—Ä–∏–º —á—Ç–æ –º–æ–∂–µ–º —Å—á–∏—Ç–∞—Ç—å –≤ –≤–∞–ª—é—Ç–∞—Ö
def values(message):
    valuta = ['üíµ –¥–æ–ª–ª–∞—Ä', 'üí∂ –µ–≤—Ä–æ', 'üí¥ —é–∞–Ω—å', 'üí¥ —Ä—É–±–ª—å']
    text = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: '
    for k in valuta:
        text += f'\n{k}'
    bot.send_message(message.chat.id, text)


@bot.message_handler(content_types=['text'])
def ask_valuta(message):
    chek_time_kurs()  # –°–º–æ—Ç—Ä–∏–º –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–∞ –≤–∞–ª—é—Ç, –µ—Å–ª–∏ –Ω–∞–¥–æ –≥—Ä—É–∑–∏–º –Ω–æ–≤—ã–π
    list_text = message.text.split(' ')  # –†–∞–∑–±–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
    if chek_len(len(list_text)):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã
        if chek_user(list_text[2]):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–∞
            text = text_for_user(*list_text)  # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤ —Ñ—É–Ω–∫—Ü–∏—é —Ç–µ–∫—Å—Ç–∞
            bot.send_message(message.chat.id, text)
        else:
            text = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –®–∞–±–ª–æ–Ω –≤–≤–æ–¥–∞ üëâ /help'  # –ï—Å–ª–∏ –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É —á–∏—Å–ª–∞
            bot.send_message(message.chat.id, text)
    else:  # –ï—Å–ª–∏ –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª–∏–Ω—ã
        text = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –®–∞–±–ª–æ–Ω –≤–≤–æ–¥–∞ üëâ /help'
        bot.send_message(message.chat.id, text)


bot.polling(none_stop=True)
